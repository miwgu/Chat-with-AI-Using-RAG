services:
  postgres:
    image: ankane/pgvector:latest                     #use pgvector 
    container_name: aida-postgres-container           # Container name for PostgreSQL DB
    restart: always
    environment:
      # PostgreSQL root and user credentials
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"                      # Map PostgreSQL port to host
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data        # Persist database data
    networks:
      - aida-net-db

  register-knowledge:
    image: node:18
    working_dir: /app
    volumes:
      - ./Backend_AI:/app
    command: npx ts-node src/rag/registerKnowledge.ts
    depends_on:
      - postgres
    networks:
      - aida-net-db
  
  aida-backend:
    build:
      context: ./Backend_AI
      dockerfile: Dockerfile
    container_name: aida-backend         # Container name for backend
    ports:
      - "3000:3000"                      # Expose backend port to host
    environment:
      # Backend app DB connection environment variables
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}               # Use service name for DB host
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    networks:
      - aida-net-frontend
      - aida-net-db
    extra_hosts:
        - "host.docker.internal:host-gateway"    
    depends_on:
      - postgres
      - register-knowledge

  aida-frontend:
    build:
      context: ./Frontend_AI
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL:  ${VITE_BACKEND_URL}   # <-- Pass build arg here
    container_name: aida-frontend
    environment:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    ports:
      - "4173:4173"
    networks:
      - aida-net-frontend
    depends_on:
      - aida-backend

networks:
  aida-net-db:
    driver: bridge
  aida-net-frontend:
    driver: bridge

volumes:

  postgres_data:
